//QUESTION: 3

#include<iostream>
#include<time.h>
using namespace std;

#define N 15000
#define K 3000

//function that measures the time in seconds
double sec(void)
{
   return double(clock())/CLOCKS_PER_SEC;
}


//Iterative binary search
int iterativeBsearch(int a[], int n, int x)
{
    int low = 0, high = n-1, mid;
    while(low <= high)
    {
            mid = (low+high)/2;
            if (x<a[mid]) 
               high = mid -1;
            else if(x>a[mid])
               low = mid+1;
            else return mid;//the number is found
    }
    return -1;//no match
}


//recursive binary search
int recursiveBsearch(int a[], int low, int high, int x)
{
    int mid = (low+high) / 2;
    
    if(low>high) return -1; //no match
    if(x<a[mid]) return (a, low, mid-1, x);//search the lower half
    if(x>a[mid]) return (a, mid+1, high, x);//search the upper half
    
    return mid;//value is found
}                
               

int main()
{
   int array[N], i, j;
   double t1, t2, t3;
   
   for(i=0; i<N; i++)//giving values to the array
      array[i]=i;
   
   t1 = sec();
       for(j=0; j<K; j++)//Iterative search
         for(i=0; i<N; i++) if(iterativeBsearch(array, N, i) != array[i]) cout<<"error!"<<endl;
   
   t2 = sec();
       for(j=0; j<K; j++)//binary search
         for(i=0; i<N; i++) if(recursiveBsearch(array,0, N-1, i) != array[i]) cout<<"error!"<<endl;  
   
   t3 = sec(); 
   
   cout<< "Iterative binary search time: "<<t2-t1<<" seconds"<<endl;
   cout<< "Recursive binary search time: "<<t3-t2<<" seconds"<<endl;

system("pause");    
return 0;    
}


*****************************

Iterative binary search time: 12.531 seconds
Recursive binary search time: 1.078 seconds
Press any key to continue . . .
    